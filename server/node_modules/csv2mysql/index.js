var mysql 	= require("promise-mysql");
var csv 	= require("fast-csv");
var fs 		= require("fs");

function csv2stream(func, file, csvConfig) {
	return new Promise(function(resolve, reject) {
		// create stream
		var i = 0;
		var stream = fs.createReadStream(file)
			.pipe(csv(csvConfig))
			.on("data", function(data) {
				var run = func(i, data);
				if (run) {
					run.catch(function(error) {
						stream.end();
						reject(error);
					});
				}
				i++;
			})
			.on("end", function() {
				resolve(i);
			});
	});
}

function csv2mysql(options, file) {
	var connection;

	return new Promise(function(resolve, reject) {
		var errors = [];
		if (!fs.existsSync(file))
			errors.push('file "'+file+'" not found');
		if (!options.hasOwnProperty('host'))
			errors.push('need config param "host"');
		if (!options.hasOwnProperty('user'))
			errors.push('need config param "user"');
		if (!options.hasOwnProperty('password'))
			errors.push('need config param "password"');
		if (!options.hasOwnProperty('database'))
			errors.push('need config param "database"');
		if (!options.hasOwnProperty('table'))
			errors.push('need config param "table"');
		if (!options.hasOwnProperty('csv'))
			errors.push('need config param "csv"');

		if (errors.length > 0)
			reject(errors);
		resolve();
	}).then(function() {
		return mysql
			.createConnection({
				host: options.host,
				user: options.user,
				password: options.password,
				database: options.database
			})
			.then(function(conn) {
				connection = conn;

				var header = [];
				return csv2stream(function(i, row) {
					if (!row)
						return;

					// if row 1 -> header?
					if (i == 0) {
						header = row;
						return;
					}

					var meta = {};

					header.forEach(function(column, i) {
						meta[column] = row[i];
					});
					return connection.query("INSERT INTO "+ options.table +" SET ?", meta);
				}, file, options.csv);
			})
			.then(function(rows, options) {
				console.log(JSON.stringify(options));
				// console.log("Parse "+rows+" Lines.");
			});
	});
};

module.exports = csv2mysql;
